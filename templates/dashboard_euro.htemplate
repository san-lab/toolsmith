{{define "nodes"}}
        var nodes = new vis.DataSet(
        {{.VisjsNodes}}
        );
{{end}}

{{define "edges"}}
        var edges = new vis.DataSet(
        {{.VisjsEdges}}
        );
{{end}}

{{define "magic"}}
{{template "header" .HeaderData}}


    <script type="text/javascript" src="/static/vis.js"></script>
    <link href="/static/vis-network.min.css" rel="stylesheet" type="text/css" />

    <style type="text/css">
        #mynetwork {
            width: 100%;
            height: 100%;
            border: 1px solid lightgray;
        }
    </style>



<table id="container"><tr>
    <td valign="top"> <div id="mynetwork" style="height: 470px; width: 520px; float: left" ></div>
        <div id="stat"   >
           <button type="button" onclick="circle(nodes)">Cirlce graph</button> <button type="button" onclick="europe(nodes)">Europe</button></div>
    </td>
    <td>
        <div id="textpane"  >
            {{template "nodelist" .}}
        </div></td>
</tr></table>

<script type="text/javascript">

    var refIntervalId = setInterval(loadNodeList, 3000); // milliseconds

    // create an array with nodes
    {{template "nodes" .Client.NetModel}}

    // create an array with edges
    {{template "edges" .Client.NetModel}}

    // create a network
    var container = document.getElementById('mynetwork');
    edges.font = {align: 'bottom'};
    var data = {
        nodes: nodes,
        edges: edges
    };
    var options = {layout:{randomSeed:5}, physics:{enabled: false},interaction:{hover:true}};

    var network = new vis.Network(container, data, options);

    var ncount = nodes.length;
    function circle (nodes) {
        document.getElementById("mynetwork").style.backgroundImage="";
        var ids = nodes.getIds();
        var r = 160;
        var aspect = 1.2;
        var step = 2 * Math.PI / ncount;
        for (var i in ids) {
            var x0 = aspect * r * Math.cos(i * step);
            var y0 = r * Math.sin(i * step) - 25;
            network.moveNode(ids[i], x0, y0);
        }
    }

    function europe (nodes) {
        document.getElementById("mynetwork").style.backgroundImage='url("/static/europe4cr.png")';
        document.getElementById("mynetwork").style.backgroundSize="100%";
        //uk
        network.moveNode("f9f9e088fde9bfa199af10f3a94281c5bb5b6b0fda7c768f2ab52aac30eca3b97e2bff79e7035e391e740a6e99c91625dc981792e476719df330a7a5786b2816",
            -50,-60)
        //spain
        network.moveNode("e0e06098910e7be354cce21c351ec5ebe439e334dc565454f6111801badcb49f725e80aa68afc69755cf6daee2ead83131e705d7fe2111688d27db6a54ac33c4",
            -120,145)
        //portugal
        network.moveNode("46944523706410298a9a6f10d85a55fff40a49d0369f5ba8ac59a31a033bfe4571fc48c22d604a59af10caefa669c71ea6a6efdb1866e07fd15b4c8a83c1d6d7",
            -210,145)
        //poland
        network.moveNode("5ea568d824fb002f5a62bd9a5e728446364d259d8e11c99fb342123fc84e0be8b00e2fed858fd1e914a2f20cb5d78bddb5d46640898b1e758c3fed67c2f135b1",
            170,-30)
        //miner3
        network.moveNode("4779929bba5b36c9699090aadb0641ba0a8a7e3da9bc0b954a2046b977b1a4fc992a7268fd5616bcaa1965419ecc127758967965be926f033f06f3c2ebe810ce",
            150,-230)
        //miner2
        network.moveNode("c756921388c9a6754f53fdd36959cd0315ae4c794c0088201928a2700c802dd08b7bf58a73afb064250303ad9d2e67ecf9dec386e7a199228e1df86627fb4f05",
            0,-230)
        //miner1
        network.moveNode("eae835efffe690df874ced68c26e91f0ef47bf53424ce4d516e3cee614a6562802b65716b387e50df3dc1a22d47034ce4849424af9e04dd4a44dccd09b3a5c47",
            -150,-230)
    }

    //circle(nodes);

    network.on("hoverEdge", function(params){
        var e = edges.get(params.edge);
        e.font={size:12};
        edges.update(e);

    });

    network.on("blurEdge", function(params){
        var e = edges.get(params.edge);
        e.font={size:0};
        edges.update(e);
    });

    network.on("doubleClick", function(params) {
            var nodeId=params.nodes[0];
            var node = nodes.get(nodeId);
            node.x=0;
            node.y=0;
            nodes.update(node);
        }
    );

    function loadNodeList() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("textpane").innerHTML =
                    this.responseText;
            }
        };
        xhttp.open("GET", "rawnodes", true);
        xhttp.send();
    }
    function loadNodes() {
        var xhttp = new XMLHttpRequest();
        xhttp.responseType = 'json';
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("stat").innerHTML =
                    JSON.stringify(this.response);
            }
        };
        xhttp.open("GET", "jsonnodes", true);
        xhttp.send();
    }


</script>



{{template "footer"}}
{{end}}
